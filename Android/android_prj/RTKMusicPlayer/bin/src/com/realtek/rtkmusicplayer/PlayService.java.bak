package com.realtek.rtkmusicplayer;

import java.io.IOException;

import android.app.Service;
import android.content.Intent;
import android.media.MediaPlayer;
import android.media.MediaPlayer.OnCompletionListener;
import android.os.IBinder;
import android.util.Log;

public class PlayService extends Service {
	public static MediaPlayer mMediaPlayer;

	public static final String PLAY_ACTION = "com.realtek.rtkmusicplayer.PLAY_ACTION";
	public static final String PAUSE_ACTION = "com.realtek.rtkmusicplayer.PAUSE_ACTION";
	public static final String NEXT_ACTION = "com.realtek.rtkmusicplayer.NEXT_ACTION";
	public static final String PREVIOUS_ACTION = "com.realtek.rtkmusicplayer.PREVIOUS_ACTION";
	public static final String STOP_ACTION = "com.realtek.rtkmusicplayer.STOP_ACTION";
	
	public static boolean isBackground =false;

	// 
	public void onCreate() {
		Log.i("Service", "onCreate");
		super.onCreate();
		mMediaPlayer = new MediaPlayer();
		mMediaPlayer.setOnCompletionListener(new OnCompletionListener() {

			@Override
			public void onCompletion(MediaPlayer mp) {
				// TODO Auto-generated method stub
				MainActivity.index ++;
				if(MainActivity.index == MainActivity.musicList.size())
					MainActivity.index = 0;
				if(!isBackground)
					MainActivity.handler.sendEmptyMessage(MainActivity.MSG_RESET);
				play();
			}
		});
	}

	//
	public IBinder onBind(Intent arg0) {
		Log.i("Service", "onBind");
		return null;
	}

	//
	public int onStartCommand(Intent intent, int flags, int startId) {
		Log.i("Service", "onStartCommand");

		String action = intent.getAction();
		if (action.equals(PLAY_ACTION)) {
			play();
		} else if (action.equals(PAUSE_ACTION)) {
			pause();
		} else if (action.equals(NEXT_ACTION)) {
			next();
		} else if (action.equals(PREVIOUS_ACTION)) {
			previous();
		} else if (action.equals(STOP_ACTION)) {
			stop();
		}

		return super.onStartCommand(intent, flags, startId);
	}

	//
	public void onDestroy() {
		Log.i("Service", "onDestroy");

		mMediaPlayer.release();

		super.onDestroy();
	}

	public void init() {
		if (MainActivity.musicList == null || MainActivity.musicList.isEmpty())
			return;
		mMediaPlayer.reset();
		// String dataSource = getDateByPosition(mCursor, mPlayPosition);
		// String info = getInfoByPosition(mCursor, mPlayPosition);
		// 
		// Toast.makeText(getApplicationContext(), info,
		// Toast.LENGTH_SHORT).show();
		try {
			mMediaPlayer.setDataSource(MainActivity.musicList.get(
					MainActivity.index));
			mMediaPlayer.prepare();
			mMediaPlayer.start();
			if(!isBackground)
				MainActivity.handler.sendEmptyMessage(MainActivity.MSG_TOTAL_TIME);
		} catch (IllegalArgumentException e1) {
			e1.printStackTrace();
		} catch (IllegalStateException e1) {
			e1.printStackTrace();
		} catch (IOException e1) {
			e1.printStackTrace();
		}
	}

	// play the music
	public void play() {
			init();
	}

	// 
	public void pause() {
		if (MainActivity.status == MainActivity.sta_play) {
			mMediaPlayer.pause();
			MainActivity.status = MainActivity.sta_pause;
		}
		else
			play();
	}

	// 
	public void stop() {
		if(mMediaPlayer!=null)
		{
		mMediaPlayer.release();
		mMediaPlayer =null;
		}
		stopSelf();
	}

	// 
	public void previous() {
		if (MainActivity.index == 0) {
			MainActivity.index = MainActivity.musicList.size() - 1;
		} else {
			MainActivity.index--;
		}
		init();
	}

	// ÏÂÒ»Ê×
	public void next() {
		if (MainActivity.index == MainActivity.musicList.size() - 1) {
			MainActivity.index = 0;
		} else {
			MainActivity.index++;
		}
		init();
	}

}
